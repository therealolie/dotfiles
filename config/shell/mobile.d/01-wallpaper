#!/bin/sh
# vim:ft=bash
_set_wallpaper(){
	sizex=1100
	sizey=2240
	mkdir -p "${XDG_CONFIG_HOME:-${HOME}/.config}/shell/data/logs/wpp/"

	magick -size $((sizex*2))x$((sizey*2)) xc:red \( "$1" -gravity center -geometry "${sizex}x${sizey}^" \) -composite "$2" | tee "${XDG_CONFIG_HOME:-${HOME}/.config}/shell/data/logs/wpp/$(date +%s).log" || return 1
	termux-wallpaper -f "$2" || return 1
	mv "$2" "${HOME}/.trash/"
	return 0
}
update_wallpaper(){
	name=updwpp
	echo "$1" | grep -qEeh && cat << EOF && return
usage: ${name} [options]
changes the wallpaper every hour,
to a random one from /sdcard/Pictures/wallpapers
options:
	h - display this Help message and exit
	f - dont check for timer
	r - move current to ../unused
	s - Show current's name
	e - rEload the file
	a - shAre file (termux-share)
examples:
	${name} h - you just did this
	${name} rf - remove the current wallpaper,
		and select a new one.
		(note: order doesnt matter,
		"${name} fr" does the same)
EOF
	day="$( date +%y%j%H )"
	datafile="${XDG_CONFIG_HOME:-${HOME}/.config}/shell/data/wallpaper_day"
	[ ! -d "$( dirname "${datafile}" )" ] && mkdir -p "$( dirname "${datafile}" )"
	if [ -r "${datafile}" ]; then
		prevday="$( head -n 1 "${datafile}" )"
		prev="$( tail -n 1 "${datafile}" )"
	else
		prevday=0
		prev=""
	fi
	echo "$1" | grep -qEes && echo "${prev}"
	[ "${day}" = "${prevday}" ] && echo "$1" | grep -qvEe[aefr] && return
	prevdir="$(pwd)"
	cd /sdcard/Pictures/wallpapers || {
		echo "cant cd"
		return
	}
	if echo "$1" | grep -qEer; then
		touch "${prev}"
		mv "${prev}" "../unused/"
	fi
	if [ "${day}" = "${prevday}" ] && echo "$1" | grep -qvEe[aef] ; then
		cd "${prevdir}" || return
		return
	fi
	if echo "$1" | grep -qEea; then
		termux-share -asend "${prev}"
		cd "${prevdir}" || return
		return
	fi

	if echo "$1" | grep -qEee; then
		fil="${prev}"
	else
		fil="$( find . -type f | shuf -n1 )"
	fi
	printf "Updating wallpaper...\r"
	while ! _set_wallpaper "$( basename "${fil}" )" "wallpaper-$(date +%s).jpg";do :;done
	echo "${fil}"
	printf "%s\n%s\n" "${day}" "${fil}" > "${datafile}"
	cd "${prevdir}" || return 
}
#update_wallpaper ""
alias updwpp=update_wallpaper
{
	while true; do
		update_wallpaper ""
		sleep 60
	done
} &
